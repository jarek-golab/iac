AWSTemplateFormatVersion: 2010-09-09
Description: Template for Docker image builder

Parameters:
  Project:
    Description: Project name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Component:
    Description: Name of the component
    Type: String
  Stage:
    Description: Stage name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  Environment:
    Description: Environment name
    Type: String
  ImageId:
    Description: Id of the latest amazon-linux-2 AMI
    Type: String
    Default: ami-04505e74c0741db8d
  DockerInstanceType:
    Description: Type of instance for Verify App Server
    Type: String
    Default: t2.xlarge
  DockerInstanceRole:
    Description: Name of the instance role
    Type: AWS::SSM::Parameter::Value<String>
  DockerSecurityGroup:
    Description: Verify Security Group from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  KeyPairName:
    Description: Key pair Name to auth Vm
    Type: String
    Default: ''
  PrivateSubnetId:
    Description: Private Subnet Id from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  DockerIp:
    Type: String

Conditions:
  UseKeyPair: !Not [!Equals [!Ref KeyPairName, '']]

Resources:
  DockerImageBuilder:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      DisableApiTermination: false
      KeyName: !If
        - UseKeyPair
        - !Ref KeyPairName
        - !Ref AWS::NoValue
      BlockDeviceMappings: 
      - DeviceName: "/dev/sda1"
        Ebs: 
          VolumeType: "gp2"
          DeleteOnTermination: "true"
          VolumeSize: "100"
      InstanceType: !Ref  DockerInstanceType
      IamInstanceProfile: !Ref DockerInstanceRole
      SecurityGroupIds:
        - !Ref DockerSecurityGroup
      SubnetId: !Ref PrivateSubnetId
      PrivateIpAddress: !Ref DockerIp
      Tags:
        - Key: Name
          Value: !Sub Docker-image-builder-ubuntu 20
      UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            #install docker image builder ubuntu 20 (t2.xlarge, 100G)
            sudo apt update
            sudo apt upgrade -y
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker ubuntu
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo apt install unzip -y
            unzip awscliv2.zip
            sudo ./aws/install
            sudo apt-get install -y default-jre git
            #for aws sdk
            sudo apt install -y python3
            sudo apt install -y python3-pip
            sudo apt install -y awscli
            pip3 install awscli --upgrade --user
            sudo mkdir -p /home/ubuntu/beaconcure/
            sudo chown ubuntu:ubuntu /home/ubuntu/beaconcure
            #copy DB pem file to /home/ubuntu/beaconcure
            sudo wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem -P /home/ubuntu/beaconcure
            aws s3 sync s3://661341420438-models-data/python-update/ /home/ubuntu/beaconcure/vectors_files_3_10/ 
            mkdir -p vectors
            cp -R /home/ubuntu/beaconcure/vectors_files_3_10/ vectors
  DockerImageBuilderParam:
      Type: AWS::SSM::Parameter
      Properties:
        Type: String
        Description: !Sub Stores Docker builder instance id
        Tier: Standard
        Name: !Sub DockerImageBuilderInstanceID
        Value: !Ref DockerImageBuilder
        Tags:
          Name: !Sub DockerImageBuilderInstanceID

