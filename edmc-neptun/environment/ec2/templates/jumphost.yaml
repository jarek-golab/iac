AWSTemplateFormatVersion: 2010-09-09
Description: Template for Verify app Server Prod in Zone B

Parameters:
  Project:
    Description: Project name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Component:
    Description: Name of the component
    Type: String
  Stage:
    Description: Stage name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  Environment:
    Description: Environment name
    Type: String
  ImageId:
    Description: Id of the Ubuntu 20.04 AMI
    Type: String
    Default: ami-04505e74c0741db8d
  VerifyInstanceType:
    Description: Type of instance for Verify App Server
    Type: String
    Default: t3.medium
  BeaconAppServerRole:
    Description: Name of the instance role
    Type: AWS::SSM::Parameter::Value<String>
  VerifySecurityGroup:
    Description: Verify Security Group from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  KeyPairName:
    Description: Key pair Name to auth Vm
    Type: String
    Default: ''
  PrivateSubnetBId:
    Description: Private Subnet Id from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  VerifyProdBIP:
    Type: String
  

Conditions:
  UseKeyPair: !Not [!Equals [!Ref KeyPairName, '']]

Resources:
  VerifyAppServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref BeaconAppServerRole
      DisableApiTermination: false
      KeyName: !If
        - UseKeyPair
        - !Ref KeyPairName
        - !Ref AWS::NoValue
      InstanceType: !Ref  VerifyInstanceType
      SecurityGroupIds:
        - !Ref VerifySecurityGroup
      PrivateIpAddress: !Ref VerifyProdBIP
      SubnetId: !Ref PrivateSubnetBId
      Tags:
        - Key: Name
          Value: !Sub Verify-app-prod-B-Ubuntu 20
      UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            #install app servers
            sudo apt update
            sudo apt upgrade

            sudo apt-get install -y build-essential
            sudo apt-get install -y nginx
            sudo apt-get install -y default-jre git
            #add node 14 LTS
            sudo apt-get install -y curl
            cd ~
            curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            sudo apt upgrade
            sudo apt-get install -y nodejs
            sudo npm install -g pm2
            pm2 startup systemd
            #run the last line from output:
            sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u ubuntu --hp /home/ubuntu
            sudo chown -R ubuntu /home/ubuntu/.pm2
            sudo npm install -g typescript@4.3.5
            sudo npm install -g @angular/cli
            sudo mkdir -p /var/beacon/public_html
            sudo chown ubuntu /var/beacon/public_html
            sudo mkdir -p /home/ubuntu/beaconcure/workspace
            sudo chown ubuntu /home/ubuntu/beaconcure
            sudo chown ubuntu /home/ubuntu/beaconcure/workspace
            #add config.js & rds-combined-ca-bundle.pem to this folder
            sudo apt install -y mongodb-clients
            sudo wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem -P /home/ubuntu/workspace
            sudo mkdir -p /etc/nginx/ssl
            sudo touch /etc/nginx/sites-available/beaconcure_validation_app
            #sudo nano /etc/nginx/sites-available/beaconcure_validation_app
            #copy beaconcure_validation_app.config
            #deploy from jenkins
            sudo rm /etc/nginx/sites-enabled/default
            sudo ln -s /etc/nginx/sites-available/beaconcure_validation_app /etc/nginx/sites-enabled
            sudo service nginx restart
            sudo bash -c cat > /etc/nginx/sites-available/beaconcure_validation_app << 'EOF'
            limit_req_zone $binary_remote_addr zone=beaconcure:10m rate=15r/s;
            server {
                limit_req zone=beaconcure burst=36 nodelay;
                    listen 80 default_server;
                    listen [::]:80 default_server;
                    root /var/beacon/public_html;
                    # Load configuration files for the default server block.
                    include /etc/nginx/default.d/*.conf;
                    client_max_body_size 1500M;
                    server_tokens off;
                    add_header X-Content-Type-Options nosniff;
                location / {
                  # First attempt to serve request as file, then as directory, then fall back to displaying a 404.
                  try_files $uri $uri/ /index.html =404;
                  add_header "Access-Control-Allow-Origin" "https://verify-dev.beaconcure.com,http://verify-dev.beaconcure.com";
                  add_header X-Frame-Options "DENY";
                  add_header X-XSS-Protection "1; mode=block";
                  add_header X-Content-Type-Options "nosniff";
                  expires 1d;
                  location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico)$ {
                    expires 60d;
                  }				
                    }		
                    location /api {
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header Host $http_host;
                  proxy_set_header X-NginX-Proxy true;
                  proxy_read_timeout 300;
                  rewrite ^/api/?(.*) /$1 break;
                  proxy_pass http://127.0.0.1:8222;
                  proxy_redirect off;
                  proxy_hide_header 'access-control-allow-origin';
                  add_header "Access-Control-Allow-Origin" "https://verify-dev.beaconcure.com,http://verify-dev.beaconcure.com";
                  proxy_hide_header "cache-cntrol";
                  add_header "Cache-Control" "no-store";
                    }
                location /report {
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header Host $http_host;
                  proxy_set_header X-NginX-Proxy true;
                  proxy_read_timeout 300;
                  rewrite ^/report/?(.*) /$1 break;
                  proxy_pass http://127.0.0.1:3000;
                  proxy_redirect off;
                  proxy_hide_header 'access-control-allow-origin';
                  add_header "Access-Control-Allow-Origin" "https://verify-dev.beaconcure.com,http://verify-dev.beaconcure.com";
                  proxy_hide_header "cache-cntrol";
                  add_header "Cache-Control" "no-store";
                    }
                location /output {
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header Host $http_host;
                  proxy_set_header X-NginX-Proxy true;
                  proxy_read_timeout 300;
                  rewrite ^/output/?(.*) /$1 break;
                  proxy_pass http://127.0.0.1:3200;
                  proxy_redirect off;
                  proxy_hide_header 'access-control-allow-origin';
                  add_header "Access-Control-Allow-Origin" "https://verify-dev.beaconcure.com,http://verify-dev.beaconcure.com";
                  proxy_hide_header "cache-cntrol";
                  add_header "Cache-Control" "no-store";
                    }
                    # redirect server error pages to the static page /40x.html
                    #
                    error_page 404 /error.html;
                error_page 403 /error.html;
                  location = /error.html {
                    }
                    # redirect server error pages to the static page /50x.html
                    #
                    error_page 500 502 503 504 /error.html;
                    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
                    #
                    #location ~ \.php$ {
                    #    proxy_pass http://127.0.0.1;
                    #}
                    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
                    #
                    #location ~ \.php$ {
                    #    root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; include fastcgi_params;
                    #}
                    # deny access to .htaccess files, if Apache's document root concurs with nginx's one
                    #
                    #location ~ /\.ht {
                    #    deny all;
                    #}
              }
              EOF
  VerifyAppServerInstanceParam:
      Type: AWS::SSM::Parameter
      Properties:
        Type: String
        Description: !Sub Stores Verify app-prod-b instance id
        Tier: Standard
        Name: !Sub /prod-b/VerifyAppServerInstanceID
        Value: !Ref VerifyAppServerInstance
        Tags:
          Name: !Sub /prod-b/VerifyAppServerInstance-dev
Outputs:
  VerifyAppServerInstanceId:
    Description: The ID of Verify App Instance
    Value: !Ref VerifyAppServerInstance

