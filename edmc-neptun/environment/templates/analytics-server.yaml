AWSTemplateFormatVersion: 2010-09-09
Description: Template for Analytics
Parameters:
  Project:
    Description: Project name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Component:
    Description: Name of the component
    Type: String
  Stage:
    Description: Stage name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  Environment:
    Description: Environment name
    Type: String
  ImageId:
    Description: Id of the latest amazon-linux-2 AMI
    Type: String
    Default: ami-04505e74c0741db8d
  AnalyticsInstanceType:
    Description: Type of instance for Verify App Server
    Type: String
    Default: t2.xlarge
  AnalyticsSecurityGroup:
    Description: Verify Security Group from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  KeyPairName:
    Description: Key pair Name to auth Vm
    Type: String
    Default: ''
  PrivateSubnetId:
    Description: Private Subnet Id from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  AnalyticsIp:
    Description: Private IP address Analytics server
    Type: String

Conditions:
  UseKeyPair: !Not [!Equals [!Ref KeyPairName, '']]

Resources:
  AnalyticsServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      DisableApiTermination: false
      KeyName: !If
        - UseKeyPair
        - !Ref KeyPairName
        - !Ref AWS::NoValue
      BlockDeviceMappings: 
      - DeviceName: "/dev/sda1"
        Ebs: 
          VolumeType: "gp2"
          DeleteOnTermination: "false"
          VolumeSize: "50"
      InstanceType: !Ref  AnalyticsInstanceType
      SecurityGroupIds:
        - !Ref AnalyticsSecurityGroup
      PrivateIpAddress: !Ref AnalyticsIp
      SubnetId: !Ref PrivateSubnetId
      Tags:
        - Key: Name
          Value: !Sub Analytics-server-${Environment}-${Stage}-Ubuntu 20
        - Key: tag:AutoOff
          Value: True
      UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt update;sudo apt upgrade
            sudo apt install -y nginx

            sudo systemctl stop nginx.service
            sudo systemctl start nginx.service
            sudo systemctl enable nginx.service

            #install SSL + load balancer configuration

            sudo apt install -y mariadb-client

            #PHP 7.2-FPM
            sudo apt install -y software-properties-common
            # sudo add-apt-repository ppa:ondrej/php - for 16
            sudo apt update;sudo apt upgrade -y
            sudo apt install -y php php-cli php-fpm php-json php-pdo php-mysql php-zip php-gd php-mbstring php-curl php-xml php-pear php-bcmath -y

            sudo systemctl restart nginx.service

            #DB
            mysql -h matomo.cpwx1wvyz9ev.us-east-1.rds.amazonaws.com -P 3306 -u dbadmin -pdbadmin123
            CREATE DATABASE matomo;
            CREATE USER 'matomouser' IDENTIFIED BY 'sadaWFSFXG123VCXasd';
            GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, INDEX, DROP, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES ON matomo.* TO 'matomouser'@'%';

            cd /tmp && wget https://builds.matomo.org/piwik-4.2.1.zip 
            sudo apt install -y unzip
            unzip piwik-4.2.1.zip 
            sudo mv piwik /var/www/html/matomo

            sudo chown -R www-data:www-data /var/www/html/matomo/
            sudo chmod -R 755 /var/www/html/matomo/
            sudo touch /etc/nginx/sites-available/matomo
            #sudo nano /etc/nginx/sites-available/matomo
            #copy config
            sudo ln -s /etc/nginx/sites-available/matomo /etc/nginx/sites-enabled/
            sudo rm /etc/nginx/sites-enabled/default
            sudo systemctl restart nginx.service
            sudo bash -c cat > /etc/nginx/sites-available/matomo << 'EOF'
            server {
                  listen 80;
                  listen [::]:80;
                  root /var/www/html/matomo;
                  index  index.php index.html index.htm;
                  server_name analytics-learn.beaconcure.com;
                  server_tokens off;
                  client_max_body_size 100M;

                  location ~ ^/(index|matomo|piwik|js/index).php {
                      include snippets/fastcgi-php.conf;
                      fastcgi_param HTTP_PROXY ""; 
                      fastcgi_pass unix:/var/run/php/php7.4-fpm.sock; 
                  }
                
                  location = /plugins/HeatmapSessionRecording/configs.php {
                      include snippets/fastcgi-php.conf;
                      fastcgi_param HTTP_PROXY "";
                      fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
                  }

                  location ~* ^.+\.php$ {
                      deny all;
                      return 403;
                  }

                  location / {
                      try_files $uri $uri/ =404;
                  }
                  
                  location ~ /(config|tmp|core|lang) {
                      deny all;
                      return 403;
                  }

                  location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2|json)$ {
                      allow all;
                  }

                  location ~ /(libs|vendor|plugins|misc/user) {
                      deny all;
                      return 403;
                  }
            }
            EOF
  
  AnalyticsServerParam:
      Type: AWS::SSM::Parameter
      Properties:
        Type: String
        Description: !Sub Stores analytics instance id
        Tier: Standard
        Name: !Sub AnalyticsInstanceID
        Value: !Ref AnalyticsServer
        Tags:
          Name: !Sub AnalyticsInstanceID